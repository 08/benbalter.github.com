// Generated by CoffeeScript 1.3.3
(function() {
  var Model, Router, View, app,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app = {
    models: {},
    collections: {},
    views: {}
  };

  Router = (function(_super) {

    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.routes = {
      "": "home",
      ":year/:month/:day/:slug/": "post",
      ":slug/": "page"
    };

    Router.prototype.home = function() {
      return console.log("home");
    };

    Router.prototype.post = function(year, month, day, slug) {
      return console.log(year, month, day, slug, 'post');
    };

    Router.prototype.page = function(slug) {
      var page;
      page = new app.models.Page({
        id: slug
      });
      page.on('change', page.view.render, page);
      return page.fetch();
    };

    Router.prototype.initialize = function() {
      var pushState;
      pushState = !!(window.history && window.history.pushState);
      return Backbone.history.start({
        pushState: pushState,
        silent: true
      });
    };

    return Router;

  })(Backbone.Router);

  View = (function(_super) {

    __extends(View, _super);

    function View() {
      return View.__super__.constructor.apply(this, arguments);
    }

    View.prototype.el = $('#content');

    return View;

  })(Backbone.View);

  app.views.PageView = (function(_super) {

    __extends(PageView, _super);

    function PageView() {
      return PageView.__super__.constructor.apply(this, arguments);
    }

    PageView.prototype.template = _.template($('#page_template').html());

    PageView.prototype.render = function() {
      var html;
      html = this.view.template(this.toJSON());
      return $(this.view.el).html(html);
    };

    return PageView;

  })(View);

  Model = (function(_super) {

    __extends(Model, _super);

    function Model() {
      return Model.__super__.constructor.apply(this, arguments);
    }

    Model.prototype.url = function() {
      return window.siteUrl + this.id + '.json';
    };

    return Model;

  })(Backbone.Model);

  app.models.Page = (function(_super) {

    __extends(Page, _super);

    function Page() {
      return Page.__super__.constructor.apply(this, arguments);
    }

    Page.prototype.view = new app.views.PageView({
      model: Page
    });

    return Page;

  })(Model);

  app.models.Post = (function(_super) {

    __extends(Post, _super);

    function Post() {
      return Post.__super__.constructor.apply(this, arguments);
    }

    return Post;

  })(Model);

  app.collections.Pages = (function(_super) {

    __extends(Pages, _super);

    function Pages() {
      return Pages.__super__.constructor.apply(this, arguments);
    }

    Pages.prototype.model = app.models.Page;

    Pages.prototype.url = window.siteURL + 'pages.json';

    return Pages;

  })(Backbone.Collection);

  app.collections.Posts = (function(_super) {

    __extends(Posts, _super);

    function Posts() {
      return Posts.__super__.constructor.apply(this, arguments);
    }

    Posts.prototype.model = app.models.Post;

    Posts.prototype.url = window.siteURL + 'posts.json';

    return Posts;

  })(Backbone.Collection);

  app.router = new Router();

  window.app = app;

  $('a[href^="' + window.siteUrl + '"]').live('click', function(e) {
    e.preventDefault();
    app.router.navigate($(this).attr('href').replace(window.siteUrl, ''), {
      trigger: true
    });
    return false;
  });

}).call(this);
